; Copyright (C) 2011 David Boddie <david@boddie.org.uk>
;
; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
;
; You should have received a copy of the GNU General Public License
; along with this program.  If not, see <http://www.gnu.org/licenses/>.

.org $8000
rom_start:
jmp language_entry
jmp service_entry

; ROM type
.byte $c2       ; 6502 code (2), language ($40), service ($80)

copyright_offset:
.byte [copyright_string - rom_start - 1]

; Version
.byte 1

; Title string
.byte "Jungle Journey (code)", 0

; Version string
.byte "1.0", 0

copyright_string:
.byte "(C) 2011 David Boddie", 0

; Second processor relocation address
.byte 0, $80, 0, 0

language_entry:

    jmp jungle_code

service_entry:

    cmp #4
    beq service_command

    service_entry_exit:
    rts

rom_name: .byte "JUNGLECODE"

service_command:

    tya                         ; push Y and X registers onto the stack
    pha
    txa
    pha

    ldx #0
    service_command_loop:
    
        lda ($f2),y
        cmp rom_name,x
        bne service_command_exit
        inx
        iny
        cpx #10
        bne service_command_loop
    
    jsr jungle_code
    lda #0
    rts
    
    service_command_exit:
    pla                         ; pop Y and X registers off the stack
    tax
    pha
    tay
    lda #4                      ; restore A
    rts

jungle_code:

.include "mapcode.oph"

tile_addresses_low:  .byte $00, $60, $c0, $00, $60, $c0, $20
tile_addresses_high: .byte $54, $54, $54, $50, $50, $50, $51

player_direction_chars_low: .byte $00,$30,$60,$90,$c0,$f0,$20,$50, $80,$b0,$e0,$10
player_direction_chars_high: .byte $3f,$3f,$3f,$3f,$3f,$3f,$40,$40, $40,$40,$40,$41

enemy_direction_chars_low:  .byte $c0,$00,$40,$80,$c0,$00,$40,$80
enemy_direction_chars_high: .byte $41,$42,$42,$42,$42,$43,$43,$43

emerge_explode_chars_low:  .byte $c0,$00,$40,$80,$c0,$00,$40,$80
emerge_explode_chars_high: .byte $4b,$4c,$4c,$4c,$4c,$4d,$4d,$4d

item_chars_low:  .byte $c0,$00,$40,$80,$c0,$00,$40,$80,$c0
item_chars_high: .byte $4d,$4e,$4e,$4e,$4e,$4f,$4f,$4f,$4f

projectile_chars_low: .byte $40,$50,$60,$70,$80,$90,$a0,$b0
.alias projectile_chars_high $41
